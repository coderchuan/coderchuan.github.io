************************************************************************************************************************
Linux 
****************************************************************************************** 
帮助
************************************************************ 
帮助语法：  
****************************** 
命令 <参数> [-XX {必选参数1|必选参数2|必选参数3}] [可选参数] {(默认参数)|参数|参数} ...
    <>{}或没有任何符号包裹的命令    必选参数  
    ()                              参数默认值。用于{}  
    []                              可选参数  
    |                               互斥参数 
    -XX ARG                         XX单独的一个功能,这个功能的参数是ARG 
    ,                               表示参数列表的分隔符
    -XX                             XX中每个字符都有一个特定的功能,可以任意组合 
    --XX                            XX只表示一个功能     
    ...                             前一个的参数可以重复  
************************************************************ 
************************************************************ 
man
****************************** 
安装:
sudo apt install man
sudo yum install man
    
apt：
sudo apt install -y manpages manpages-de manpages-dev manpages-de-dev   安装完整版本帮助文档(基本命令和C语言文档)  
sudo apt install -y manpages-zh                                         安装简体中文帮助文档(基本命令)  

yum:
sudo yum install -y man man-pages man-pages.noarch                      安装完整版本帮助文档(基本命令和C语言文档)  
sudo yum install -y man-pages-zh-CN.noarch                              安装简体中文帮助文档(基本命令)  
****************************** 
man [section] title 
man [-C file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-m system[,...]] [-M path] [-S list] [-e extension] [-i|-I] [--regex|--wildcard] [--names-only]  [-a]  [-u]  [--no-subpages]  [-P pager]  [-r  prompt]  [-7]  [-E  encoding]  [--no-hyphenation]  [--no-justification]  [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z] [[section] page[.section] ...] ...
man -k [apropos options] regexp ...
man -K [-w|-W] [-S list] [-i|-I] [--regex] [section] term ...
man -f [whatis options] page ...
man -l [-C file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-P  pager]  [-r  prompt] [-7] [-E encoding] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z] file ...
man -w|-W [-C file] [-d] [-D] page ...
man -c [-C file] [-d] [-D] page ...
man [-?V]
    功能    获取帮助信息
    权限    当前用户
    section 章节，可取以下值:
            1   基本命令
            2   系统函数
            3   库函数
            4   设备文件(/dev)
            5   配置文件格式
            6   游戏
            7   杂项 
            8   管理员命令
            9   内核文档
    title   要查找的帮助信息的标题 
    -M path 使用指定路径(path)的man文档 
    例      man 7 man                       查看第七章节(杂项)的man帮助
            man -M /usr/share/man/zh_CN ls  查看第七章节(杂项)的ls的中文帮助 
****************************************************************************************** 
软件安装(包管理工具)：   
************************************************************  
apt   
****************************** 
安装:    
debian ubuntu kail自带 
****************************** 
更改软件源： 
1、 sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak,备份 
2、 sudo apt edit-sources,手动更改源网址;
    从网站上下载sources.list替换原有的sources.list文件,可以使用以下方式:
        wget -O /etc/apt/sources.list URL 或 
        curl -o /etc/apt/sources.list URL 
3、使用命令行：sed -i "s/原主域名/新主域名/g" /etc/apt/sources.list
****************************** 
apt {[-fy] install|upgrade|full-upgrade|autoremove|remove|purge} pkg[=ver] ... 
apt update 
apt clean 
apt list [--all-versions|--installed|--upgradeable] [pkg ...] 
apt show pkg[=ver] ... 
apt search pkg ... 
apt edit-sources 
apt {-h|-v} 
    功能            管理软件 
    权限            root 
    install         安装最新的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开,包名可以是deb文件的路径,使用-f参数时还可修复所安装软件的依赖;不带pkg参数且使用了-f参数时自动修复所有的软件依赖  
    upgrade         安装最新的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开.保留旧版本依赖.不带pkg参数时对已经安装的软件全部安装最新版本
    full-upgrade    安装最新的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开.升级旧版本依赖.不带pkg参数时对已经安装的软件(包括系统版本)全部安装最新版本   
    autoremove      卸载指定的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开,还会卸载与pkg软件相关的不被其他软件依赖的自动安装的包;不带pkg参数时卸载所有的不再有依赖关系且是自动安装的软件  
    remove          卸载指定的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开,不会删除软件的配置文件 
    purge           卸载指定的pkg软件,若指定了=ver,则操作指定的版本.多个包名使用空格隔开,还会删除软件的配置文件    
    autoclean       清空已缓存且无效的安装包 
    clean           清空已缓存的安装包 
    update          更新软件源列表
    search          在软件源列表和已安装列表中模糊搜索最新版本pkg包 
    list            在软件源列表和已安装列表中精确搜索pkg包,并且可以分为以下类型显示  
                        无参数            查看最新版本pkg包.省略pkg包名则显示所有最新版本 
                        --installed       查看已安装的pkg包.省略pkg包名则显示所有已安装
                        --upgradeable     查看可升级的pkg包.省略pkg包名则显示所有可升级 
                        --all-versions    查看所有版本pkg包.省略pkg包名则显示所有包的所有版本   
    show            查看指定版本包的详细信息,省略[=ver]时显示最新的版本的详细信息 
    ver             版本号          
    pkg             软件包名     
    -h              显示帮助信息   
    -v              显示版本信息  
    -y              自动应答yes  
    -f              自动修复依赖     
    edit-sources    编辑/etc/apt/sources.list文件    
    例              sudo apt search linux-image 查看软件仓库中的内核版本    
                    sudo apt list --upgradeable 查看可升级的软件
                    sudo apt -y -f install pkg  安装软件且自动解决依赖问题  
                    sudo apt remove pkg         卸载指定的软件  
                    sudo apt purge pkg          卸载指定的软件并删除配置文件  
                    sudo apt autoremove pkg     卸载指定的软件并卸载与此软件相关的其他程序不依赖的自动安装的包    
                    sudo apt list pkg           在源列表和已经安装的列表中精确搜索软件   
************************************************************ 
yum
****************************** 
安装： 
centos自带
****************************** 
更改软件源： 
1、 sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak,备份 
2、 sudo vi /etc/yum.repos.d/CentOS-Base.repo,手动更改源网址;
    从网站上下载sources.list替换原有的sources.list文件,可以使用以下方式:
        wget -O /etc/yum.repos.d/CentOS-Base.repo URL 或
        curl -o /etc/yum.repos.d/CentOS-Base.repo URL 
****************************** 
yum [-yq] install pkg[-ver] ...
yum {update|update-to|update-minimal|upgrade|upgrade-to|distribution-synchronization|remove|erase|autoremove|reinstall|downgrade|deplist} pkg ...
yum list [[available|installed|updates] [pkg...]|recent] 
yum search pkg ... 
yum info pkg[-ver]
yum clean all 
yum makecache
    功能            管理软件 
    权限            root 
    install         安装最新版本的软件,若指定了-ver,则操作指定的版本.多个包名之间可以使用空格隔开.
    update          升级到最新版本软件,多个包名之间可以使用空格隔开.保留旧版本依赖.不带pkg参数时对已经安装的软件全部安装最新版本 
    upgrade         升级到最新版本软件,多个包名之间可以使用空格隔开.升级旧版本依赖.不带pkg参数时对已经安装的软件(包括系统)全部安装最新版本 
    autoremove      卸载指定的pkg软件,若指定了-ver,则操作指定的版本.多个包名使用空格隔开,还会卸载与pkg软件相关的不被其他软件依赖的自动安装的包;不带pkg参数时卸载所有的不再有依赖关系且是自动安装的软件  
    remove          卸载指定的pkg软件,若指定了-ver,则操作指定的版本.多个包名使用空格隔开 
    clean all       清空已缓存的安装包 
    makecache       更新软件源列表 
    search          在软件源列表和已安装列表中模糊搜索最新版本pkg包 
    list            在软件源列表和已安装列表中精确搜索pkg包,并且可以分为以下类型显示 
                    无参数         查看已安装的和仓库中的pkg包.省略pkg包名则显示所有最新版本
                    available      查看仓库中的pkg包.省略pkg包名则显示所有最新版本 
                    installed      查看已安装的pkg包.省略pkg包名则显示所有已安装  
                    updates        查看可升级的软件 
                    recent         查看最近安装的软件 
    info            查看指定版本包的详细信息,省略[-ver]时显示最新的版本的详细信息 
    ver             版本号.构架版本
    pkg             软件包名 
    -y              自动应答yes         
    -q              安静模式,操作过程中不输出无用信息 
    例              sudo yum list kernel        查看软件仓库中的内核版本    
                    sudo yum list updates       查看可升级的软件 
******************************************************************************************
find
******************************
find [PATH] [OPTION] 
    功能                    查找文件/文件夹 
    权限                    查找目录的拥有者 
    无任何参数              显示当前目录(含子目录)下的所有文件
    PATH                    要查找的目录,默认目录为当前目录 
    OPTION                  操作参数,多个操作参数使用空格隔开。 
                                -name NAME              根据名称区分大小写查找,NAME表示名称,可以使用通配符 
                                -iname NAME             根据名称不区分大小写查找,NAME表示名称,可以使用通配符 
                                -user USERNAME          根据属主查找文件 
                                -group GROUPNAME        根据属组查找文件 
                                -type TYPE              根据类型查找,TYPE表示类型,可取以下值:
                                                            f           文件(默认)
                                                            d           目录 
                                                            c           字符设备文件
                                                            b           块设备文件
                                                            l　　       链接文件
                                                            p　　       管道文件
                                -perm [+|-]MODE         根据权限查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            MODE        表示权限三位数 
                                -mtime [+|-]NUM         根据内容修改天数查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM         表示天数
                                -atime [+|-]NUM         根据访问天数查找 
                                                            +           大于
                                                            -           小于 
                                                            无+|-       等于 
                                                            NUM         表示天数
                                -ctime [+|-]NUM         根据属性修改天数查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM         表示天数
                                -mmin [+|-]NUM          根据内容修改分钟数查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM         表示分钟数
                                -amin [+|-]NUM          根据访问分钟数查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM         表示分钟数
                                -cmin [+|-]NUM          根据属性修改分钟数查找 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM         表示分钟数
                                -size [+|-]NUM_UNIT     根据大小查找文件 
                                                            +           大于
                                                            -           小于
                                                            无+|-       等于 
                                                            NUM_UNIT    表示文件大小:数字后紧跟着单位,单位可以取以下值  
                                                                            b   512Byte,默认 
                                                                            c   1Byte 
                                                                            w   2Byte
                                                                            k   1024Byte
                                                                            M   1MB 
                                                                            G   1GB 
    示例                    find / -name php-fom.conf 
******************************************************************************************
管道
    管道符号：`|`
    用法：COMMAND_1 `|` COMMAND_2  
    功能：管道符号前的命令的输出作为后一个命令的输入
    解释：COMMAND_1命令输出的信息保存到管道文件中；COMMAND_2命令最后一个参数必须是文件(仅用于读取)，略去这个参数(自动使用COMMAND_1保存的管道文件) 
    示例：echo "<?php echo PHP_OS ?>" | php   //输出当前操作系统名称
******************************************************************************************
alias
******************************
alias [-p] [name='value' ...] 
    功能    别名替换(仅在当前登录有效,关机或重启失效,若要永久保存,应在~/.bashrc文件中定义别名) 
    权限    当前用户
    无参数  显示当前已经存在的别名 
    -p      显示当前已经存在的别名 
    name    别名    
    value   要使用别名替换的指令 
    ...     别名列表。可以同时为多个命令分别设置别名   
******************************************************************************************
kill 
******************************
kill [options] <pid> [...]
    功能            结束进程
    权限            root 
    [options]       -N          N为数字,表示信号编号,它可以取以下值 
                                    9   强制结束进程 
                    -l or -L    列出所有可用的信号及其编号 
    <pid>           进程号 
    [...]           多个进程号之前使用空格分隔
    示例            kill -9 80      强制结束PID为80的进程 
                    kill -9 82 83   强制结束PID为82和83的进程 
******************************************************************************************
curl 
******************************
安装
sudo apt install curl
sudo yum install curl 
******************************
curl [-O|-o file] URL 
    功能    资源请求
    权限    当前用户 
    无参数  除网址外没有其他参数时,将网址中的内容直接显示在屏幕上 
    -o      保存文件,文件名由file指定 
    -O      保存文件到当前目录且文件名为网址中的文件名 
    -s      不输出任何信息
    -S      输出错误信息。通常和s一起使用用于只输出错误信息 
    URL     网址 
    file    文件路径及名称 
    例:     curl -o ./download.txt URL 
******************************************************************************************
wget 
******************************
安装    
sudo apt install wget
sudo yum install wget
******************************
wget [-P path|-O file] URL 
    功能    文件下载或发送请求
    无参数  除网址外没有其他参数时,直接保存文件到当前目录且保留源文件名 
    -q      屏蔽`request header`信息
    -O      保存文件,文件名由file指定 
    -O-     直接输出而不保存到文件
    -P      保存文件到path路径下,保留源文件名 
    URL     网址 
    path    文件路径 
    file    文件路径及名称 
    示例:     
        ```
        wget -O ./download.txt URL  下载文件并保存，URL为文件的在线地址
        wget -qO- URL               直接输出URL中的内容 
        ```
****************************************************************************************** 
用户与权限：   
权限优先级:用户的权限配置优先级比用户组高。例如用户U属于组G,一个文件G组有可读权限但是用户U没有可读权限,则用户U没有权限读取此文件 
用户ID:相同的用户UID有相同的命令执行权限 
sudo权限:
    配置(/etc/sudoers)： 
        USERNAME_OR_GROUP HOST=[TO_USER_TO_GROUP] [NOPASSWD:] COMMAND  
            USERNAME_OR_GROUP       使用sudo命令可以切换的目标用户、目标组，可取以下值：
                                        USERNAME    用户名为USERNAME的用户使用sudo命令可以切换用户或组
                                        %GROUP      所有在组GROUP中的用户使用sudo命令可以切换用户或组
            HOST                    允许执行sudo命令的主机(当本地有多个网络连接时，可能会有多个登录的主机名)。取值为ALL则允许所有登录的主机执行sudo命令
            TO_USER_TO_GROUP        可以切换的目标用户、目标组，可取以下值： 
                                        (TO_USER)               可以切换的目标用户，使用(ALL)则可切换到所有用户 
                                        (TO_USER:TO_GROUP)      可以切换的目标用户和目标用户组，使用(ALL)或(ALL:ALL)则可切换到所有用户和用户组
                                        省略                    相当于(root:root) 
            NOPASSWD:               使用此选项则无须密码即可使用sudo命令，省略此参数则需要密码 
            COMMAND                 可以执行的可执行命令(文件)，多个命令(文件)可以使用逗号(,)分隔。取值为ALL则可执行所有命令(文件) 
            示例                    %sudo   ALL=(ALL:ALL) ALL
    如果将GROUP设置为sudo,则将要使用sudo权限的用户加入sudo组中,然后该用户重新登录即可使用sudo权限 
************************************************************ 
用户： 
用户ID：0和[1000-65535]用户帐号;[1-99]系统预设账号;[100-999]服务帐号 
组ID：0和[1000-65535]用户帐号所属组;[1-99]为系统预设账号所属组;[100-999]服务帐号所属组 
****************************** 
id [OPTION]... [USER]   
        功能        查看用户名，用户组，用户组列表 
        权限        所有用户
        [OPTION]    -u          用户ID 
                    -g          用户默认登录组ID 
                    -G          用户组ID列表  
                    -n          显示名称而不是ID,与 ugG 参数使用 如:-gn 
                    -r          显示真实ID,与 ugG 参数使用 如:-gr 
                    --help      帮助信息 
                    --version   版本信息 
        USER        用户名,不输入此参数时默认为当前登录用户 
        无参数      显示当前用户的所有信息(用户，组，组列表)
groups USER              
        功能    查看用户所在的用户组 
        权限    所有用户
        USER    用户名,多个用户之间使用英文逗号分隔 
cat /etc/passwd           
        功能    查看所有帐号(帐户名:密码:帐户ID:组ID:注释性描述:主目录:登录Shell) 
        权限    所有用户 
cat /etc/passwd | grep -P -v "^[^:]*:[^:]*:(?|[1-9]|\d{2}|[1-4]\d{2}):|nobody|nogroup|nologin"
        功能    查看可登录用户帐号(帐户名:密码:帐户ID:组ID:注释性描述:主目录:登录Shell) 
        权限    所有用户 
cat /etc/group            
        功能    查看所有组(组名:密码:组ID:组内帐号列表) 
        权限    所有用户 
cat /etc/group | grep -P -v "^[^:]*:[^:]*:(?|[1-9]|\d{2}|[1-4]\d{2}):|nobody|nogroup|nologin"
        功能    查看可登录用户的用户组(组名:密码:组ID:组内帐号列表) 
        权限    所有用户 
groupadd 参数 组       
        功能    创建用户组。常用方式：groupadd 用户组名。参数如下：
        权限    root
        参数    -g 用户组ID，不指定时默认自增
                -o 表示新建的用户组ID可以与已经存在的用户组ID相同
        组      组名或组ID 
groupdel 组            
        功能    删除用户组。常用方式：groupdel 用户组名。
        权限    root
        组      组名或组ID
groupmod option GROUP         
        功能    修改用户组属性 
        权限    root
        option  -g NEW_ID           修改组 GROUP 的 id 为 NEW_ID
                -g NEW_ID -o        修改组 GROUP 的 id 为 NEW_ID,并且允许 new_id 有重复
                -n NEW_GROUP_NAME   修改组 GROUP 的 组名为 NEW_GROUP_NAME 
        GROUP   组名  
gpssswd 参数 用户 组名 
        功能    附加用户组管理。
        权限    root
        参数    无参数且无用户名   仅root用户可以执行 修改群组密码              
                -A     仅root用户可以执行 设定组的管理员，多个用户使用','隔开 
                -M     仅root用户可以执行 设定组的成员，多个用户使用','隔开 
                -R     仅root用户可以执行 严格模式(限制非组内用户登入)，即使使用正确的密码也无法登录
                -r     仅root用户可以执行 删除群组密码，同时取消严格模式
                -a     添加组的成员
                -d     删除组的成员
        用户    用户名或用户ID
        组      组名或组ID 
newgrp  组名                
        功能    登入到组
        权限    只限在群组中的用户登入到组 
useradd 参数 用户     
        功能    创建用户。常用方式：useradd -m -g 用户组 用户名。参数如下：
        权限    root
        参数    -m     创建用户主目录，若-d参数未指定则与创建在/home目录下且与用户名同名
                -M     不创建用户主目录
                -g     指定默认登录组，不使用此参数且不使用-n参数时默认指定为与用户名同名的组 
                -G     除默认登录组外，设置组列表，使用英文逗号分隔，组名使用单引号包裹。  
                -N     不要创建与用户名相同的组,而是使用系统默认的组作为用户默认登录组 
                -d     指定用户主目录,默认在/home目录下且与用户名同名
                -s     指定用户的shell程序,有以下值可取：
                            /bin/bash：标准交互式终端 
                            /bin/sh：非交互式终端(多用于执行脚本) 
                            /usr/sbin/nologin：不可登录终端 
                -u     用户ID，不指定时默认自增
                -c     描述信息
                -o     允许使用已经存在的帐号ID 
                -r     建立GID和UID较小的用户(系统用户)
                -e     指定帐号的有效期,格式为MM/DD/YY,缺省为-1永久有效
                -f     指定帐号密码过期后多少天帐号失效,缺省为-1永久有效
        用户   用户名或用户ID
userdel 参数 用户      
        功能    删除用户。常用方式：userdel -r 用户名。参数如下：
        权限    root
        参数    -r      删除用户时同时删除用户主目录
                -f      强制删除用户
        用户   用户名或用户ID
usermod options USER 
        功能    修改用户属性
        权限    root
        options -c  COMMENT         描述信息
                -d  HOME_DIR        指定用户主目录
                -e  EXPIRE_DATE     指定帐号的有效期,格式为MM/DD/YY,缺省为-1永久有效
                -f  INACTIVE        指定帐号密码过期后多少天帐号失效,缺省为-1永久有效
                -g  GROUP           指定默认登录组，不使用此参数且不使用-n参数时默认指定为与用户名同名的组 
                -G  GROUPS          除默认登录组外，设置组列表，使用英文逗号分隔，组名使用单引号包裹。如果组列表为单引号包裹的空字符串,则表示删除默认登录组以外的组列表 
                -a -G GROUPS        除默认登录组外，设置追加组列表，使用英文逗号分隔，组名使用单引号包裹。 
                -s  SHELL           指定用户的shell程序 
                -u  UID             用户ID
                -l  NEW_LOGIN       修改用户名
                -o                  允许使用已经存在的帐号ID 
                -L                  锁定用户密码,使密码无效
                -U                  解除密码锁定
        USER   用户名或用户ID
        示例   usermod -a -G 'sudo' ubuntu         将用户ubuntu加入sudo组,以便可以使用sudo权限 
passwd  参数 用户         
        功能    帐户密码操作。常用方式：passwd 用户名。参数如下：
        权限    root
        参数    无参数          修改密码
                无参数且无用户  修改当前用户的密码
                -d              删除密码
                -x              设置密码的有效期,缺省为-1永久有效
                -f              下次登录时修改密码
                -l              禁用帐户,除root外无法登录 
                -u              解除禁用
        用户    用户名或用户ID
                无参数且无用户  修改当前用户的密码  
****************************************************************************************** 
权限
************************************************************ 
文件夹权限
读4：读取文件(夹)列表
写2：新增、删除该文件夹下的文件(夹)。需要有执行新增、删除文件(夹)命令的权限。 
执行1：进入该文件夹、获取文件属性、对该文件夹下的文件(夹)执行命令 
******************************
文件权限
读4：读取文件内容
写2：编辑该文件的内容
执行1：运行此文件
******************************
文件(夹)访问权限更改： 
******************************
chmod [ugoa][+-=][rwxXst] 参数 文件  
        功能        设置文件(夹)权限
        权限        文件所属用户
        [ugoa]      u   文件的当前用户 
                    g   文件当前所在的群组
                    o   文件当前用户及所在群组以外的用户 
                    a   所有用户
        [+-=]       +   增加权限
                    -   取消权限
                    =   设定唯一权限 
        [rwxXst]    r   读取权限    权值  4
                    w   写入权限    权值  2
                    x   可执行权限  权值  1 
                    X   文件是目录或对某用户有执行权限的情况下，才设置执行权限 
                    s   设置使文件在执行阶段具有文件所有者的权限(此权限设置前需要设置可执行权限,如果查询权限时,显示为S,则说明此权限未生效)
                    t   一般用于目录。对于有此权限的目录，允许任何用户在此目录下创建文件，但是只能删除自己(root除外)创建的文件 
        参数：      -v  显示权限变更的详细信息
                    -c  权限更改已生效则显示权限变更信息 
                    -f  不显示错误信息 
                    -R  对当前目录下的所有文件(夹)进行相同的权限变更操作
                    --help    帮助 
                    --version 版本信息 
        文件        要设定权限的文件的路径及名称  
        示例        chmod u=rwx ./nginx.conf  在./nginx.config文件上给当前用户读写执行权限
chmod {三位数|四位数} 文件 
        功能        设置文件(夹)权限
        权限        文件所属用户
        三位数      权限设定：权限值由(1可执行;2可写;4可读;)组合相加。0无权限;1可执行;2可写;4可读;3读写;5可读可执行;6可写可执行;7可读可写可执行。
                        第一位 文件的当前用户的权限 
                        第二位 文件当前所在的群组的权限 
                        第三位 文件当前用户及所在群组以外的用户的权限 
        四位数      第一位数字的权限设定：无:0,suid:4,guid:2。suid表示对可执行文件,执行者将具有该程序拥有者(owner)的权限；guid表示对可执行文件,执行者将具有该程序用户组(group)的权限
                    除第一位数字外的权限设定：权限值由(1可执行;2可写;4可读;)组合相加。0无权限;1可执行;2可写;4可读;3读写;5可读可执行;6可写可执行;7可读可写可执行。 
                        第一位 owner权限 
                        第二位 文件的当前用户的权限 
                        第三位 文件当前所在的群组的权限 
                        第四位 文件当前用户及所在群组以外的用户的权限 
        文件        要设定权限的文件的路径及名称 
************************************************************
文件(夹)用户和组归属更改：  
******************************
chown 用户:组 参数 文件
        功能        更改文件的用户或用户和组   
        权限        root 
        用户:组     用户      用户名或用户ID，把文件的归属更改为此用户
                    :组       :组名或:组ID，把文件的归属更改为此组
                    用户:组   用户名或用户ID:组名或组ID，把文件的归属更改为此用户此组
        参数        -v        显示权限变更的详细信息
                    -c        权限更改已生效则显示权限变更信息 
                    -f        不显示错误信息 
                    -R        对当前目录下的所有文件(夹)进行相同的权限变更操作
                    -h        修复符号链接 
                    --help    帮助 
                    --version 版本信息 
        文件       文件路径及名称
******************************************************************************************
计划任务：
************************************************************
基本功能
******************************
crontab           
        功能        通过键盘输入为当前用户添加计划任务并替换原来的计划任务列表，使用ctrl+D结束输入。如果输入的任务正确，则添加到计划任务列表
        权限        当前用户
crontab -u 用户 文件
        功能        添加计划任务并替换原来的计划任务列表
        权限        当前用户
        -u 用户     指定用户
                    若省略则默当前用户 
        文件        含有任务的文件，如果任务正确，将其载入计划任务列表中 
crontab -u 用户 -[elr] -i  
        功能        执行计划任务
        权限        当前用户
        -u 用户     指定用户,若省略则默当前用户 
        -[elr]      -e 编辑计划任务列表
                    -l 显示计划任务列表
                    -r 删除计划任务 
        -i          执行-r指令时是否进行提示。如果使用此参数则进行提示，否则不进行提示 
************************************************************
计划任务的键盘输入格式或文件格式 
**************************
参数1 参数2 参数3 参数4 参数5 命令 >> 文件 
        参数1       分，取值范围0-59
        参数2       时，取值范围0-23
        参数3       天，取值范围1-31
        参数4       月，取值范围1-12
        参数5       周，取值范围0-7(0与7皆表示周日)。参数1至参数5有以下用法：
                        数值      表示此值符合执行条件
                        连接符(-) 连接两个数值，表示在此范围的值皆符合执行条件
                        逗号(,)   把多个孤立值或(和)多个连续值组成列表，表示在此列表内的值皆符合执行条件
                        */n       *表示:取值范围的值/1。*/n表示:取值范围的值/n。表示能够被n整除的值皆符合执行条件 
        命令       要在此计划中执行的命令
        >> 文件    文件:文件路径及文件名。输出重定向到文件中 
************************************************************
任务示例(每月最后一天12:12分执行任务)
**************************
12 12 28-31 * * [ ` date -d tomorrow +\%e ` = 1 ] && do-something
******************************************************************************************
时间与日期
****************************** 
date 参数 +格式
      功能      显示或设定系统的日期与时间
      权限      设定时间需要root权限,显示时间所有用户皆有权限
      参数      --help    帮助 
                  --version 版本信息 
                  -d        显示使用字符串描述的时间
                            "2 day"       在当前时间上加上两天
                            "1 month ago" 一个月以前
                            "20190612"    2019年6月12日00时00分00秒
                            "2019-06-12"  2019年6月12日00时00分00秒
                            "6/12/2019"   2019年6月12日00时00分00秒
                            "17:25:36"    17时25分36秒 
                            "20190616 15:32:39" 2019年6月16日15时32分39秒 
                            "2019-06-16 15:32:39" 2019年6月16日15时32分39秒 
                            "6/16/2019 15:32:39" 2019年6月16日15时32分39秒 
                  -f        显示文件中的多行字符串描述的时间 
                            文件路径及文件名称
                  -I        以ISO8601格式显示时间，不能与[+格式]同时存在。例如：2019-06-12(2019年6月12日)
                  -r        显示文件最后的修改时间
                  -R        以RFC2822格式显示时间
                  --rfc-3339 FORMAT 以RFC3339格式显示时间，不能与[+格式]同时存在。FORMAT 表示格式,可以取以下值: 
                                date    显示日期
                                seconds 显示时间和日期，精确到秒
                                ns      显示时间和日期，精确到纳秒 
                  -s        通过字符串设置系统时间。root权限运行
                            "2 day"       在当前时间上加上两天
                            "1 month ago" 一个月以前
                            "20190612"    2019年6月12日00时00分00秒
                            "2019-06-12"  2019年6月12日00时00分00秒
                            "6/12/2019"   2019年6月12日00时00分00秒
                            "17:25:36"    17时25分36秒 
                            "20190616 15:32:39" 2019年6月16日15时32分39秒 
                            "2019-06-16 15:32:39" 2019年6月16日15时32分39秒 
                            "6/16/2019 15:32:39" 2019年6月16日15时32分39秒 
                            注意：执行此命令后应再使用root权限执行clock -w以保存时间到硬件
                  -u        显示UTC(协调世界时)时间
      +格式       格式控制
                  -           不填充
                  _           空格填充
                  0           0填充
                  ^           大写
                  #           如果可能尽可能使用相反的字母大小写 
                  格式
                  %C          世纪。例如:20 
                  %U          周数,00-53。周日为一周的起始。如果1月1日不是周日,则周数记为00;否则周数记为01 
                  %W          周数,00-53。周一为一周的起始。如果1月1日不是周一,则周数记为00;否则周数记为01 
                  %y          年。两位
                  %Y          年。四位
                  %V          周数,01-53。国际标准周(周一为一周的起始。1月1日如果小于等于周四则记为01周,1月1日所在周算作当年;否则周数延续上一年,1月1日所在周算作上一年)  
                  %g          年。两位，国际标准周计年法 
                  %G          年。四位，国际标准周计年法
                  %q          季,1-4 
                  %m          月,01-12。
                  %u          周几,1-7
                  %w          周几,0-6
                  %d          日,01-31。 
                  %e或%_d     日, 1-31。占位两位，空格填充。
                  %j          一年中的第几天,001-366。 
                  %H          时,00-23。24小时制。
                  %I          时,01-12。12小时制。
                  %k          时,0-23。24小时制。
                  %l          时,1-12。12小时制。
                  %p          显示AM(上午)或PM(下午)。如果无法判断则留空
                  %P          显示am(上午)或pm(下午)。如果无法判断则留空 
                  %M          分,00-59。
                  %S          秒,00-59。 
                  %s          Unix时间戳
                  %N          纳秒,000000000-999999999。
                  %D          %m/%d/%y。例如:06/23/19
                  %F          %Y-%m-%d。例如:2019-06-23
                  %x          %m/%d/%y。例如:12/31/99
                  %r          %I:%M:%S\ %p。例如,03:13:48  
                  %X          %H:%M:%S。例如,23:13:48  
                  %T          %H:%M:%S
                  %R          %H:%M
                  %z          时区。例如:-0400，西四区，比UTC时间慢4小时0分
                  %:z         时区。例如:-04:00，西四区，比UTC时间慢4小时0分 
                  %::z        时区。例如:-04:00:00，西四区，比UTC时间慢4小时0分0秒
                  %:::z       时区。必要时显示精度。例如:+05:30，东五区,比UTC时间快5小时30分 
                  %Z          夏令时。例如:EDT  
                  %a          当前言环境的星期简写
                  %A          当前言环境的星期全称
                  %b或%h      当前言环境的月份简写
                  %B          当前言环境的月份全称
                  %c          当前言环境的时间和日期
                  %%          "%"符号
                  %n          换行符
                  %t          Tab制表符。 
******************************************************************************************
重定向：
文件描述符(用于>和>>前,当值为1时,可以省略文件描述符)： 
0                   标准输入文件 
1                   标准正常输出文件 
2                   标准错误输出文件 
****************************** 
>file               以覆盖的方式，把命令执行的正常信息输出重定向到file文件中 
>>file              以追加的方式，把命令执行的正常信息输出重定向到file文件中 
2>file              以覆盖的方式，把命令执行的错误信息输出重定向到file文件中 
2>>file             以追加的方式，把命令执行的错误信息输出重定向到file文件中 
>file 2>&1          以覆盖的方式，把命令执行的信息输出重定向到file文件中 
>>file 2>&1         以追加的方式，把命令执行的信息输出重定向到file文件中 
>file1 2>file2      以覆盖的方式，把命令执行的正常信息输出重定向到file1文件中，把命令执行的错误信息输出重定向到file2文件中   
>>file1 2>>file2    以追加的方式，把命令执行的正常信息输出重定向到file1文件中，把命令执行的错误信息输出重定向到file2文件中   
******************************************************************************************  
空文件： 
****************************** 
/dev/null           空文件,什么也没有,即使写入数据也是空文件。可以用作输出信息垃圾桶。
/dev/zero           全是由二进制数据0组成的文件,数据长度无限。可以用作输入初始化。
****************************************************************************************** 
通配符：
****************************** 
*               匹配任何字符0个或多个
?               匹配任何字符1个
[abcd]          匹配方括号中的任何一个字符
[a-z]           匹配a-z范围内的任何一个字符
[^abcd]         匹配除方括号中(abcd)任何一个字符 
[^a-z]          匹配不在a-z范围内的任何一个字符 
{a..z}          生成a-z的序列，以空格分隔
{a,8,4}         生成由a 8 4组成的序列，以空格分隔   
****************************************************************************************** 
转义字符:
******************************   
\'  \"  \*  \?  \\  \~  \`  \!  \#  \$             
\&  \|  \{  \}  \(  \)  \;  \<  \>  \^              
****************************************************************************************** 
引号:
****************************** 
反引号(`):
被反引号包裹的字符串,作为命令结果输出。 

单引号('):
1、无法转义任何变量、反引号、字符  
2、两个单引号作为一个字符串。若命令中出现多个单引号，则从左至右两两配对作为多个字符拼接输出。  
3、示例：echo '123''456'     输出 123456 
         echo \'123456\'     输出 '123456'  
         echo '12'\''345'    输出 12'3'45

双引号("): 
1、可以转义变量、反引号、双引号(\")   
2、两个双引号作为一个字符串。若命令中出现多个单引号，则从左至右两两配对作为多个字符拼接输出。 
3、示例：echo "123 `date`"   输出 123 Sun Sep  8 17:24:57 CST 2019
         echo "123\""        输出 123"  
         echo "123""456"     输出 123456 
****************************************************************************************** 
常用技巧：
****************************** 
cat /etc/*release*                                  查看发行信息 
cat /etc/*release* |egrep '^VERSION_ID=|^ID='       查看系统名称和版本 
                                                        从github更新当前的软件源时地址末尾的文件名应该是ID与VERSION_ID的值使用下划线连接,如下(ubuntu_18.04即ID为ubuntu,VERSION_ID为18.04):
uname -m                                            查看系统构架 
uname -r                                            查看内核版本 
